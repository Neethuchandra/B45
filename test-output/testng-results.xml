<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="6" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-25T02:50:26Z" name="Default suite" finished-at="2022-07-25T02:50:41Z" duration-ms="14060">
    <groups>
    </groups>
    <test started-at="2022-07-25T02:50:26Z" name="Default test" finished-at="2022-07-25T02:50:41Z" duration-ms="14060">
      <class name="generic.BaseTest">
        <test-method is-config="true" signature="createReport()[pri:0, instance:generic.BaseTest@6f53b8a]" started-at="2022-07-25T02:50:26Z" name="createReport" finished-at="2022-07-25T02:50:26Z" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="publishReport()[pri:0, instance:generic.BaseTest@6f53b8a]" started-at="2022-07-25T02:50:41Z" name="publishReport" finished-at="2022-07-25T02:50:41Z" duration-ms="429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publishReport -->
      </class> <!-- generic.BaseTest -->
      <class name="script.TestClass2">
        <test-method is-config="true" signature="openApp(java.lang.reflect.Method, java.lang.String)[pri:0, instance:script.TestClass2@5c80cf32]" started-at="2022-07-25T02:50:26Z" name="openApp" finished-at="2022-07-25T02:50:34Z" duration-ms="7853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.TestClass2.testLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testLogin()[pri:0, instance:script.TestClass2@5c80cf32]" started-at="2022-07-25T02:50:34Z" name="testLogin" finished-at="2022-07-25T02:50:34Z" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at script.TestClass2.testLogin(TestClass2.java:19)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.TestClass2@5c80cf32]" started-at="2022-07-25T02:50:34Z" name="closeApp" finished-at="2022-07-25T02:50:35Z" duration-ms="922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=FAILURE method=TestClass2.testLogin()[pri:0, instance:script.TestClass2@5c80cf32] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.TestClass2 -->
      <class name="script.TestClass1">
        <test-method is-config="true" signature="openApp(java.lang.reflect.Method, java.lang.String)[pri:0, instance:script.TestClass1@7d900ecf]" started-at="2022-07-25T02:50:35Z" name="openApp" finished-at="2022-07-25T02:50:40Z" duration-ms="4549" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.TestClass1.testA()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testA()[pri:0, instance:script.TestClass1@7d900ecf]" started-at="2022-07-25T02:50:40Z" name="testA" finished-at="2022-07-25T02:50:40Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.TestClass1@7d900ecf]" started-at="2022-07-25T02:50:40Z" name="closeApp" finished-at="2022-07-25T02:50:41Z" duration-ms="713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA status=SUCCESS method=TestClass1.testA()[pri:0, instance:script.TestClass1@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.TestClass1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
